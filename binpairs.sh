module load python/2.7.6-vanilla
#HOME=/lustre/beagle/jhlu/BRCA_wustl_RESEG_UPDATE

WHOAMI="$(whoami)"
top -b -d 60.00 -n 150 -u $WHOAMI  > binning.log &


#SOMMATRIX=$PREFIX-som-gl.m2
#OUTPUTPREFIX=$PREFIX-som-seg-gl

# LOADING PARAMETERS
#OLDSEGMATRIX=BRCA_wustl-seg-gl.m2
#NEWSEGMATRIX=BRCA_wustl-seg2-gl.m2

MINFREQ=
TOP_PERCENTILE=
TOP_NUMBER=
MUTEXPAIRFILE=
COOCCURPAIRFILE=
OUTPUTPREFIX=

# LIMIT
PATIENTFILE=shared_patients.plst
GENEFILE=
PATIENTBLACKLIST=
GENEBLACKLIST=
GENELIST1=
GENELIST2=

# PROCESSING
NUMPROCESSES=5
GROUPTYPE=TripletNetwork
PAIRTYPE=
TRIPLESTATS=
TRIPLETSCORES=
LOCALEDGEBETWEENNESS=

# BIN GENES BY PREORDAINED SEGMENTINFO
LOADGENESEGMENTS=1
GENESEGMENTFILE=SEGMENTINFO_COSMIC

# BIN GENES BY PAIRS
BINGENESBYPAIRS=
BINDISTANCETHRESHOLD=

# Don't need to set the below parameters
GENEBINENTRIESFILE=
NOTHROWOUTEXTRAS=

# CALCULATION PARAMETERS
MPROB=1e-3
CPROB=1e-3
MAXOVERLAP=
MINCOOCCUR=
MINRATIO=0.3
COOCCURDISTANCETHRESHOLD=



# FILTERS
FILTERCODING=
GAINLOSSCOMBINE=
FILTERMUTEXGAINLOSS=
FILTERMUTEXSAMESEGMENT=
FILTERCOOCCURSAMESEGMENT=
FCSS_RATIO=
FCSS_DIFFRATIO=
FCSS_COVERAGE=
FCSS_PVALUE=



# FILTER COOCCURRING PAIRS
FILTERCOOCCUR=
USEDOWNSTREAM=
RATIOPERC=
SCOREPERC=
COVERAGEPERC=
COMBSCOREPERC=

# PLOTS
PLOTDISTRIBUTION=
PLOTPATIENTDISTRIBUTION=


#MAKE COMMAND NAME out of parameters. Then run.
COMMAND="python bingenesbypairs.py"

if [ $OLDSEGMATRIX ]
then
COMMAND=${COMMAND}" -m $OLDSEGMATRIX"
fi

if [ $BINDISTANCETHRESHOLD ]
then
COMMAND=${COMMAND}" -bdt $BINDISTANCETHRESHOLD"
fi


if [ $LOADGENESEGMENTS ]
then
COMMAND=${COMMAND}" -lgs $LOADGENESEGMENTS"
fi

if [ $GENESEGMENTFILE ]
then
COMMAND=${COMMAND}" -gsf $GENESEGMENTFILE"
fi


if [ $GENEBINENTRIESFILE ]
then
COMMAND=${COMMAND}" -gbef $GENEBINENTRIESFILE"
fi

if [ $NOTHROWOUTEXTRAS ]
then
COMMAND=${COMMAND}" -ntoe $NOTHROWOUTEXTRAS"
fi



if [ $NEWSEGMATRIX ]
then
COMMAND=${COMMAND}" -nm $NEWSEGMATRIX"
fi

if [ $MINFREQ ]
then
COMMAND=${COMMAND}" -mf $MINFREQ"
fi
if [ $TOP_PERCENTILE ]
then
COMMAND=${COMMAND}" -tp $TOP_PERCENTILE"
fi
if [ $TOP_NUMBER ]
then
COMMAND=${COMMAND}" -tn $TOP_NUMBER"
fi
if [ $MUTEXPAIRFILE ]
then
COMMAND=${COMMAND}" -mdf $MUTEXPAIRFILE"
fi

if [ $COOCCURPAIRFILE ]
then
COMMAND=${COMMAND}" -cdf $COOCCURPAIRFILE"
fi
if [ $OUTPUTPREFIX ]
then
COMMAND=${COMMAND}" -o $OUTPUTPREFIX"
fi
if [ $PATIENTFILE ]
then
COMMAND=${COMMAND}" -pf $PATIENTFILE"
fi
if [ $GENEFILE ]
then
COMMAND=${COMMAND}" -gf $GENEFILE"
fi
if [ $PATIENTBLACKLIST ]
then
COMMAND=${COMMAND}" -pbf $PATIENTBLACKLIST"
fi
if [ $GENEBLACKLIST ]
then
COMMAND=${COMMAND}" -gbf $GENEBLACKLIST"
fi
if [ $GENELIST1 ]
then
COMMAND=${COMMAND}" -gl1 $GENELIST1"
fi
if [ $GENELIST2 ]
then
COMMAND=${COMMAND}" -gl2 $GENELIST2"
fi
if [ $NUMPROCESSES ]
then
COMMAND=${COMMAND}" -pcn $NUMPROCESSES"
fi
if [ $GROUPTYPE ]
then
COMMAND=${COMMAND}" -gt $GROUPTYPE"
fi
if [ $PAIRTYPE ]
then
COMMAND=${COMMAND}" -pt $PAIRTYPE"
fi
if [ $TRIPLESTATS ]
then
COMMAND=${COMMAND}" -ctst $TRIPLESTATS"
fi
if [ $TRIPLETSCORES ]
then
COMMAND=${COMMAND}" -ctsc $TRIPLETSCORES"
fi
if [ $LOCALEDGEBETWEENNESS ]
then
COMMAND=${COMMAND}" -leb $LOCALEDGEBETWEENNESS"
fi
if [ $PLOTDISTRIBUTION ]
then
COMMAND=${COMMAND}" -pd $PLOTDISTRIBUTION"
fi
if [ $PLOTPATIENTDISTRIBUTION ]
then
COMMAND=${COMMAND}" -ppd $PLOTPATIENTDISTRIBUTION"
fi

if [ $FILTERCOOCCUR ]
then
COMMAND=${COMMAND}" -fc $FILTERCOOCCUR"
fi

if [ $USEDOWNSTREAM ]
then
COMMAND=${COMMAND}" -ud $USEDOWNSTREAM"
fi

if [ $FILTERCODING ]
then
COMMAND=${COMMAND}" -fcoding $FILTERCODING"
fi

if [ $GAINLOSSCOMBINE ]
then
COMMAND=${COMMAND}" -glc $GAINLOSSCOMBINE"
fi



if [ $FILTERMUTEXGAINLOSS ]
then
COMMAND=${COMMAND}" -fmgl $FILTERMUTEXGAINLOSS"
fi

if [ $FILTERMUTEXSAMESEGMENT ]
then
COMMAND=${COMMAND}" -fmss $FILTERMUTEXSAMESEGMENT"
fi

if [ $FILTERCOOCCURSAMESEGMENT ]
then
COMMAND=${COMMAND}" -fcss $FILTERCOOCCURSAMESEGMENT"
fi

if [ $FCSS_RATIO ]
then
COMMAND=${COMMAND}" -fcss_rt $FCSS_RATIO"
fi

if [ $FCSS_DIFFRATIO ]
then
COMMAND=${COMMAND}" -fcss_mfdrt $FCSS_DIFFRATIO"
fi

if [ $FCSS_COVERAGE ]
then
COMMAND=${COMMAND}" -fcss_ct $FCSS_COVERAGE"
fi

if [ $FCSS_PVALUE ]
then
COMMAND=${COMMAND}" -fcss_pt $FCSS_PVALUE"
fi


if [ $BINGENESBYPAIRS ]
then
COMMAND=${COMMAND}" -bgbp $BINGENESBYPAIRS"
fi


if [ $RATIOPERC ]
then
COMMAND=${COMMAND}" -r_p $RATIOPERC"
fi

if [ $SCOREPERC ]
then
COMMAND=${COMMAND}" -s_p $SCOREPERC"
fi

if [ $COVERAGEPERC ]
then
COMMAND=${COMMAND}" -c_p $COVERAGEPERC"
fi
if [ $COMBSCOREPERC ]
then
COMMAND=${COMMAND}" -cs_p $COMBSCOREPERC"
fi
if [ $MPROB ]
then
COMMAND=${COMMAND}" -mp $MPROB"
fi
if [ $CPROB ]
then
COMMAND=${COMMAND}" -cp $CPROB"
fi
if [ $MAXOVERLAP ]
then
COMMAND=${COMMAND}" -mo $MAXOVERLAP"
fi
if [ $MINCOOCCUR ]
then
COMMAND=${COMMAND}" -mc $MINCOOCCUR"
fi
if [ $MINRATIO ]
then
COMMAND=${COMMAND}" -mcr $MINRATIO"
fi
if [ $COOCCURDISTANCETHRESHOLD ]
then
COMMAND=${COMMAND}" -cdt $COOCCURDISTANCETHRESHOLD"
fi



# Run mutex_triangles.py
echo
echo “**************************************************************************”
echo Running binpairs on $PREFIX
echo
echo Command is $COMMAND
$COMMAND

# Combine the matrices

echo
echo $PREFIX finished
echo “**************************************************************************”
echo